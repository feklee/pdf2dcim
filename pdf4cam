#!/bin/bash

# Felix E. Klee <felix.klee@inka.de>

shopt -s extglob
shopt -s nullglob

WIDTH=6000
HEIGHT=4000
START_NUMBER=0
ANGLE=0
ORIENTATION=1 # 1 = 0째, 3 = 180째, 6 = 90째, 8 = -90째
RESOLUTION=300
CHECK=true

function verify_presence {
    hash "$1" 2>/dev/null || {
        echo "$1 is required but cannot be found" >&2
        exit 1
    }
}

verify_presence convert
verify_presence exiftool

# Usage info
function show_help {
cat << EOF
Usage: ${0##*/} [-hWHD] [PDF FILE]
Convert image files to: P0000000.JPG, P0000001.JPG, ...

    -h          display this help and exit
    -n          don't check for existing output files
    -W WIDTH    width in mm, default $WIDTH
    -H HEIGHT   height in mm, default $HEIGHT
    -P          portrait, default landscape
    -S NUMBER   number of first image, default $START_NUMBER
    -R DPI      resolution when rendering the PDF, default $RESOLUTION

The images are viewable in camera. Avoid file names with numbers that
are already on the camera. Even if the prefix is different than "P",
this can lead to naming conflicts and the camera will only display one
of images.
EOF
}

OPTIND=1
while getopts hnW:H:PS:R: opt; do
    case $opt in
        h)
            show_help
            exit 0
            ;;
        n)  CHECK=false
            ;;
        W)  WIDTH=$OPTARG
            ;;
        H)  HEIGHT=$OPTARG
            ;;
        P)  ANGLE=90
            ORIENTATION=8
            ;;
        S)  START_NUMBER=$OPTARG
            ;;
        R)  RESOLUTION=$OPTARG
            ;;
        *)
            show_help >&2
            exit 1
            ;;
    esac
done
shift "$((OPTIND-1))" # Discard the options and sentinel --

if [ "$#" -ne 1 ]; then
    show_help >&2
    exit 1
fi

PDF="$1"
SIZE="${WIDTH}x$HEIGHT"
SCRIPT_DIR="$(dirname "$BASH_SOURCE")"
TEMPLATE="$SCRIPT_DIR/pdf4cam.jpg" # taken with a camera, to copy EXIF
DENSITY="${RESOLUTION}x$RESOLUTION"

$CHECK && {
    compgen -G "P+([0-9]).JPG" >/dev/null && {
        echo "Output files already exist" >&2
        exit 1
    }
}

# Rasterize:
convert -sampling-factor 4:2:2 \
        -density "$DENSITY" \
        -rotate "$ANGLE" \
        -resize "$SIZE" \
        "$PDF" \
        -background white \
        -alpha remove \
        -colorspace sRGB \
        -type truecolor \
        -scene "$START_NUMBER" \
        P%07d.JPG

# Make compatible with camera:
THUMBD="$(mktemp -d)"
for JPG in P+([0-9]).JPG; do
    THUMB="$THUMBD/$JPG"
    convert "$JPG" \
            -resize 160x120 \
            -background black \
            -gravity center \
            -colorspace sRGB \
            -type truecolor \
            -extent 160x120 \
            -sampling-factor 4:2:2 \
            "$THUMB"
    exiftool -q -overwrite_original -TagsFromFile "$TEMPLATE" \
             -all:all -unsafe -XML:All -JFIF:ALL= "$JPG"
    exiftool -q -overwrite_original "-ThumbnailImage<=$THUMB" "$JPG"
    exiftool -q -overwrite_original -Orientation=$ORIENTATION \
             -n "$JPG"
done
